Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMA

Grammar

Rule 0     S' -> program
Rule 1     program -> statement
Rule 2     program -> statement program
Rule 3     statement -> FOR LPAREN declaration SEMICOLON condition SEMICOLON increment RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA
Rule 4     declaration -> IDENTIFIER EQUALS expression
Rule 5     condition -> expression comparison_op expression
Rule 6     comparison_op -> LT
Rule 7     comparison_op -> LE
Rule 8     comparison_op -> GT
Rule 9     comparison_op -> GE
Rule 10    comparison_op -> EQ
Rule 11    comparison_op -> NE
Rule 12    increment -> IDENTIFIER PLUS PLUS
Rule 13    increment -> IDENTIFIER MINUS MINUS
Rule 14    statements -> statement
Rule 15    statements -> statement statements
Rule 16    statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON
Rule 17    expression -> expression PLUS term
Rule 18    expression -> expression MINUS term
Rule 19    expression -> expression TIMES term
Rule 20    expression -> expression DIVIDE term
Rule 21    expression -> term
Rule 22    term -> NUMBER
Rule 23    term -> IDENTIFIER

Terminals, with rules where they appear

COMMA                : 
DIVIDE               : 20
DOT                  : 16 16
EQ                   : 10
EQUALS               : 4
FOR                  : 3
GE                   : 9
GT                   : 8
IDENTIFIER           : 4 12 13 23
LE                   : 7
LLAVE_ABIERTA        : 3
LLAVE_CERRADA        : 3
LPAREN               : 3 16
LT                   : 6
MINUS                : 13 13 18
NE                   : 11
NUMBER               : 22
OUT                  : 16
PLUS                 : 12 12 17
PRINTLN              : 16
RPAREN               : 3 16
SEMICOLON            : 3 3 16
SYSTEM               : 16
TIMES                : 19
error                : 

Nonterminals, with rules where they appear

comparison_op        : 5
condition            : 3
declaration          : 3
expression           : 4 5 5 16 17 18 19 20
increment            : 3
program              : 2 0
statement            : 1 2 14 15
statements           : 3 15
term                 : 17 18 19 20 21

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement
    (2) program -> . statement program
    (3) statement -> . FOR LPAREN declaration SEMICOLON condition SEMICOLON increment RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA
    (16) statement -> . SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON

    FOR             shift and go to state 3
    SYSTEM          shift and go to state 4

    program                        shift and go to state 1
    statement                      shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> statement .
    (2) program -> statement . program
    (1) program -> . statement
    (2) program -> . statement program
    (3) statement -> . FOR LPAREN declaration SEMICOLON condition SEMICOLON increment RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA
    (16) statement -> . SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON

    $end            reduce using rule 1 (program -> statement .)
    FOR             shift and go to state 3
    SYSTEM          shift and go to state 4

    statement                      shift and go to state 2
    program                        shift and go to state 5

state 3

    (3) statement -> FOR . LPAREN declaration SEMICOLON condition SEMICOLON increment RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA

    LPAREN          shift and go to state 6


state 4

    (16) statement -> SYSTEM . DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON

    DOT             shift and go to state 7


state 5

    (2) program -> statement program .

    $end            reduce using rule 2 (program -> statement program .)


state 6

    (3) statement -> FOR LPAREN . declaration SEMICOLON condition SEMICOLON increment RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA
    (4) declaration -> . IDENTIFIER EQUALS expression

    IDENTIFIER      shift and go to state 9

    declaration                    shift and go to state 8

state 7

    (16) statement -> SYSTEM DOT . OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON

    OUT             shift and go to state 10


state 8

    (3) statement -> FOR LPAREN declaration . SEMICOLON condition SEMICOLON increment RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA

    SEMICOLON       shift and go to state 11


state 9

    (4) declaration -> IDENTIFIER . EQUALS expression

    EQUALS          shift and go to state 12


state 10

    (16) statement -> SYSTEM DOT OUT . DOT PRINTLN LPAREN expression RPAREN SEMICOLON

    DOT             shift and go to state 13


state 11

    (3) statement -> FOR LPAREN declaration SEMICOLON . condition SEMICOLON increment RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA
    (5) condition -> . expression comparison_op expression
    (17) expression -> . expression PLUS term
    (18) expression -> . expression MINUS term
    (19) expression -> . expression TIMES term
    (20) expression -> . expression DIVIDE term
    (21) expression -> . term
    (22) term -> . NUMBER
    (23) term -> . IDENTIFIER

    NUMBER          shift and go to state 17
    IDENTIFIER      shift and go to state 18

    condition                      shift and go to state 14
    expression                     shift and go to state 15
    term                           shift and go to state 16

state 12

    (4) declaration -> IDENTIFIER EQUALS . expression
    (17) expression -> . expression PLUS term
    (18) expression -> . expression MINUS term
    (19) expression -> . expression TIMES term
    (20) expression -> . expression DIVIDE term
    (21) expression -> . term
    (22) term -> . NUMBER
    (23) term -> . IDENTIFIER

    NUMBER          shift and go to state 17
    IDENTIFIER      shift and go to state 18

    expression                     shift and go to state 19
    term                           shift and go to state 16

state 13

    (16) statement -> SYSTEM DOT OUT DOT . PRINTLN LPAREN expression RPAREN SEMICOLON

    PRINTLN         shift and go to state 20


state 14

    (3) statement -> FOR LPAREN declaration SEMICOLON condition . SEMICOLON increment RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA

    SEMICOLON       shift and go to state 21


state 15

    (5) condition -> expression . comparison_op expression
    (17) expression -> expression . PLUS term
    (18) expression -> expression . MINUS term
    (19) expression -> expression . TIMES term
    (20) expression -> expression . DIVIDE term
    (6) comparison_op -> . LT
    (7) comparison_op -> . LE
    (8) comparison_op -> . GT
    (9) comparison_op -> . GE
    (10) comparison_op -> . EQ
    (11) comparison_op -> . NE

    PLUS            shift and go to state 23
    MINUS           shift and go to state 24
    TIMES           shift and go to state 25
    DIVIDE          shift and go to state 26
    LT              shift and go to state 27
    LE              shift and go to state 28
    GT              shift and go to state 29
    GE              shift and go to state 30
    EQ              shift and go to state 31
    NE              shift and go to state 32

    comparison_op                  shift and go to state 22

state 16

    (21) expression -> term .

    PLUS            reduce using rule 21 (expression -> term .)
    MINUS           reduce using rule 21 (expression -> term .)
    TIMES           reduce using rule 21 (expression -> term .)
    DIVIDE          reduce using rule 21 (expression -> term .)
    LT              reduce using rule 21 (expression -> term .)
    LE              reduce using rule 21 (expression -> term .)
    GT              reduce using rule 21 (expression -> term .)
    GE              reduce using rule 21 (expression -> term .)
    EQ              reduce using rule 21 (expression -> term .)
    NE              reduce using rule 21 (expression -> term .)
    SEMICOLON       reduce using rule 21 (expression -> term .)
    RPAREN          reduce using rule 21 (expression -> term .)


state 17

    (22) term -> NUMBER .

    PLUS            reduce using rule 22 (term -> NUMBER .)
    MINUS           reduce using rule 22 (term -> NUMBER .)
    TIMES           reduce using rule 22 (term -> NUMBER .)
    DIVIDE          reduce using rule 22 (term -> NUMBER .)
    LT              reduce using rule 22 (term -> NUMBER .)
    LE              reduce using rule 22 (term -> NUMBER .)
    GT              reduce using rule 22 (term -> NUMBER .)
    GE              reduce using rule 22 (term -> NUMBER .)
    EQ              reduce using rule 22 (term -> NUMBER .)
    NE              reduce using rule 22 (term -> NUMBER .)
    SEMICOLON       reduce using rule 22 (term -> NUMBER .)
    RPAREN          reduce using rule 22 (term -> NUMBER .)


state 18

    (23) term -> IDENTIFIER .

    PLUS            reduce using rule 23 (term -> IDENTIFIER .)
    MINUS           reduce using rule 23 (term -> IDENTIFIER .)
    TIMES           reduce using rule 23 (term -> IDENTIFIER .)
    DIVIDE          reduce using rule 23 (term -> IDENTIFIER .)
    LT              reduce using rule 23 (term -> IDENTIFIER .)
    LE              reduce using rule 23 (term -> IDENTIFIER .)
    GT              reduce using rule 23 (term -> IDENTIFIER .)
    GE              reduce using rule 23 (term -> IDENTIFIER .)
    EQ              reduce using rule 23 (term -> IDENTIFIER .)
    NE              reduce using rule 23 (term -> IDENTIFIER .)
    SEMICOLON       reduce using rule 23 (term -> IDENTIFIER .)
    RPAREN          reduce using rule 23 (term -> IDENTIFIER .)


state 19

    (4) declaration -> IDENTIFIER EQUALS expression .
    (17) expression -> expression . PLUS term
    (18) expression -> expression . MINUS term
    (19) expression -> expression . TIMES term
    (20) expression -> expression . DIVIDE term

    SEMICOLON       reduce using rule 4 (declaration -> IDENTIFIER EQUALS expression .)
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24
    TIMES           shift and go to state 25
    DIVIDE          shift and go to state 26


state 20

    (16) statement -> SYSTEM DOT OUT DOT PRINTLN . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 33


state 21

    (3) statement -> FOR LPAREN declaration SEMICOLON condition SEMICOLON . increment RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA
    (12) increment -> . IDENTIFIER PLUS PLUS
    (13) increment -> . IDENTIFIER MINUS MINUS

    IDENTIFIER      shift and go to state 35

    increment                      shift and go to state 34

state 22

    (5) condition -> expression comparison_op . expression
    (17) expression -> . expression PLUS term
    (18) expression -> . expression MINUS term
    (19) expression -> . expression TIMES term
    (20) expression -> . expression DIVIDE term
    (21) expression -> . term
    (22) term -> . NUMBER
    (23) term -> . IDENTIFIER

    NUMBER          shift and go to state 17
    IDENTIFIER      shift and go to state 18

    expression                     shift and go to state 36
    term                           shift and go to state 16

state 23

    (17) expression -> expression PLUS . term
    (22) term -> . NUMBER
    (23) term -> . IDENTIFIER

    NUMBER          shift and go to state 17
    IDENTIFIER      shift and go to state 18

    term                           shift and go to state 37

state 24

    (18) expression -> expression MINUS . term
    (22) term -> . NUMBER
    (23) term -> . IDENTIFIER

    NUMBER          shift and go to state 17
    IDENTIFIER      shift and go to state 18

    term                           shift and go to state 38

state 25

    (19) expression -> expression TIMES . term
    (22) term -> . NUMBER
    (23) term -> . IDENTIFIER

    NUMBER          shift and go to state 17
    IDENTIFIER      shift and go to state 18

    term                           shift and go to state 39

state 26

    (20) expression -> expression DIVIDE . term
    (22) term -> . NUMBER
    (23) term -> . IDENTIFIER

    NUMBER          shift and go to state 17
    IDENTIFIER      shift and go to state 18

    term                           shift and go to state 40

state 27

    (6) comparison_op -> LT .

    NUMBER          reduce using rule 6 (comparison_op -> LT .)
    IDENTIFIER      reduce using rule 6 (comparison_op -> LT .)


state 28

    (7) comparison_op -> LE .

    NUMBER          reduce using rule 7 (comparison_op -> LE .)
    IDENTIFIER      reduce using rule 7 (comparison_op -> LE .)


state 29

    (8) comparison_op -> GT .

    NUMBER          reduce using rule 8 (comparison_op -> GT .)
    IDENTIFIER      reduce using rule 8 (comparison_op -> GT .)


state 30

    (9) comparison_op -> GE .

    NUMBER          reduce using rule 9 (comparison_op -> GE .)
    IDENTIFIER      reduce using rule 9 (comparison_op -> GE .)


state 31

    (10) comparison_op -> EQ .

    NUMBER          reduce using rule 10 (comparison_op -> EQ .)
    IDENTIFIER      reduce using rule 10 (comparison_op -> EQ .)


state 32

    (11) comparison_op -> NE .

    NUMBER          reduce using rule 11 (comparison_op -> NE .)
    IDENTIFIER      reduce using rule 11 (comparison_op -> NE .)


state 33

    (16) statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN . expression RPAREN SEMICOLON
    (17) expression -> . expression PLUS term
    (18) expression -> . expression MINUS term
    (19) expression -> . expression TIMES term
    (20) expression -> . expression DIVIDE term
    (21) expression -> . term
    (22) term -> . NUMBER
    (23) term -> . IDENTIFIER

    NUMBER          shift and go to state 17
    IDENTIFIER      shift and go to state 18

    expression                     shift and go to state 41
    term                           shift and go to state 16

state 34

    (3) statement -> FOR LPAREN declaration SEMICOLON condition SEMICOLON increment . RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA

    RPAREN          shift and go to state 42


state 35

    (12) increment -> IDENTIFIER . PLUS PLUS
    (13) increment -> IDENTIFIER . MINUS MINUS

    PLUS            shift and go to state 43
    MINUS           shift and go to state 44


state 36

    (5) condition -> expression comparison_op expression .
    (17) expression -> expression . PLUS term
    (18) expression -> expression . MINUS term
    (19) expression -> expression . TIMES term
    (20) expression -> expression . DIVIDE term

    SEMICOLON       reduce using rule 5 (condition -> expression comparison_op expression .)
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24
    TIMES           shift and go to state 25
    DIVIDE          shift and go to state 26


state 37

    (17) expression -> expression PLUS term .

    PLUS            reduce using rule 17 (expression -> expression PLUS term .)
    MINUS           reduce using rule 17 (expression -> expression PLUS term .)
    TIMES           reduce using rule 17 (expression -> expression PLUS term .)
    DIVIDE          reduce using rule 17 (expression -> expression PLUS term .)
    LT              reduce using rule 17 (expression -> expression PLUS term .)
    LE              reduce using rule 17 (expression -> expression PLUS term .)
    GT              reduce using rule 17 (expression -> expression PLUS term .)
    GE              reduce using rule 17 (expression -> expression PLUS term .)
    EQ              reduce using rule 17 (expression -> expression PLUS term .)
    NE              reduce using rule 17 (expression -> expression PLUS term .)
    SEMICOLON       reduce using rule 17 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 17 (expression -> expression PLUS term .)


state 38

    (18) expression -> expression MINUS term .

    PLUS            reduce using rule 18 (expression -> expression MINUS term .)
    MINUS           reduce using rule 18 (expression -> expression MINUS term .)
    TIMES           reduce using rule 18 (expression -> expression MINUS term .)
    DIVIDE          reduce using rule 18 (expression -> expression MINUS term .)
    LT              reduce using rule 18 (expression -> expression MINUS term .)
    LE              reduce using rule 18 (expression -> expression MINUS term .)
    GT              reduce using rule 18 (expression -> expression MINUS term .)
    GE              reduce using rule 18 (expression -> expression MINUS term .)
    EQ              reduce using rule 18 (expression -> expression MINUS term .)
    NE              reduce using rule 18 (expression -> expression MINUS term .)
    SEMICOLON       reduce using rule 18 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 18 (expression -> expression MINUS term .)


state 39

    (19) expression -> expression TIMES term .

    PLUS            reduce using rule 19 (expression -> expression TIMES term .)
    MINUS           reduce using rule 19 (expression -> expression TIMES term .)
    TIMES           reduce using rule 19 (expression -> expression TIMES term .)
    DIVIDE          reduce using rule 19 (expression -> expression TIMES term .)
    LT              reduce using rule 19 (expression -> expression TIMES term .)
    LE              reduce using rule 19 (expression -> expression TIMES term .)
    GT              reduce using rule 19 (expression -> expression TIMES term .)
    GE              reduce using rule 19 (expression -> expression TIMES term .)
    EQ              reduce using rule 19 (expression -> expression TIMES term .)
    NE              reduce using rule 19 (expression -> expression TIMES term .)
    SEMICOLON       reduce using rule 19 (expression -> expression TIMES term .)
    RPAREN          reduce using rule 19 (expression -> expression TIMES term .)


state 40

    (20) expression -> expression DIVIDE term .

    PLUS            reduce using rule 20 (expression -> expression DIVIDE term .)
    MINUS           reduce using rule 20 (expression -> expression DIVIDE term .)
    TIMES           reduce using rule 20 (expression -> expression DIVIDE term .)
    DIVIDE          reduce using rule 20 (expression -> expression DIVIDE term .)
    LT              reduce using rule 20 (expression -> expression DIVIDE term .)
    LE              reduce using rule 20 (expression -> expression DIVIDE term .)
    GT              reduce using rule 20 (expression -> expression DIVIDE term .)
    GE              reduce using rule 20 (expression -> expression DIVIDE term .)
    EQ              reduce using rule 20 (expression -> expression DIVIDE term .)
    NE              reduce using rule 20 (expression -> expression DIVIDE term .)
    SEMICOLON       reduce using rule 20 (expression -> expression DIVIDE term .)
    RPAREN          reduce using rule 20 (expression -> expression DIVIDE term .)


state 41

    (16) statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN expression . RPAREN SEMICOLON
    (17) expression -> expression . PLUS term
    (18) expression -> expression . MINUS term
    (19) expression -> expression . TIMES term
    (20) expression -> expression . DIVIDE term

    RPAREN          shift and go to state 45
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24
    TIMES           shift and go to state 25
    DIVIDE          shift and go to state 26


state 42

    (3) statement -> FOR LPAREN declaration SEMICOLON condition SEMICOLON increment RPAREN . LLAVE_ABIERTA statements LLAVE_CERRADA

    LLAVE_ABIERTA   shift and go to state 46


state 43

    (12) increment -> IDENTIFIER PLUS . PLUS

    PLUS            shift and go to state 47


state 44

    (13) increment -> IDENTIFIER MINUS . MINUS

    MINUS           shift and go to state 48


state 45

    (16) statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 49


state 46

    (3) statement -> FOR LPAREN declaration SEMICOLON condition SEMICOLON increment RPAREN LLAVE_ABIERTA . statements LLAVE_CERRADA
    (14) statements -> . statement
    (15) statements -> . statement statements
    (3) statement -> . FOR LPAREN declaration SEMICOLON condition SEMICOLON increment RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA
    (16) statement -> . SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON

    FOR             shift and go to state 3
    SYSTEM          shift and go to state 4

    statements                     shift and go to state 50
    statement                      shift and go to state 51

state 47

    (12) increment -> IDENTIFIER PLUS PLUS .

    RPAREN          reduce using rule 12 (increment -> IDENTIFIER PLUS PLUS .)


state 48

    (13) increment -> IDENTIFIER MINUS MINUS .

    RPAREN          reduce using rule 13 (increment -> IDENTIFIER MINUS MINUS .)


state 49

    (16) statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON .

    FOR             reduce using rule 16 (statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON .)
    SYSTEM          reduce using rule 16 (statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 16 (statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON .)
    LLAVE_CERRADA   reduce using rule 16 (statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON .)


state 50

    (3) statement -> FOR LPAREN declaration SEMICOLON condition SEMICOLON increment RPAREN LLAVE_ABIERTA statements . LLAVE_CERRADA

    LLAVE_CERRADA   shift and go to state 52


state 51

    (14) statements -> statement .
    (15) statements -> statement . statements
    (14) statements -> . statement
    (15) statements -> . statement statements
    (3) statement -> . FOR LPAREN declaration SEMICOLON condition SEMICOLON increment RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA
    (16) statement -> . SYSTEM DOT OUT DOT PRINTLN LPAREN expression RPAREN SEMICOLON

    LLAVE_CERRADA   reduce using rule 14 (statements -> statement .)
    FOR             shift and go to state 3
    SYSTEM          shift and go to state 4

    statement                      shift and go to state 51
    statements                     shift and go to state 53

state 52

    (3) statement -> FOR LPAREN declaration SEMICOLON condition SEMICOLON increment RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA .

    FOR             reduce using rule 3 (statement -> FOR LPAREN declaration SEMICOLON condition SEMICOLON increment RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA .)
    SYSTEM          reduce using rule 3 (statement -> FOR LPAREN declaration SEMICOLON condition SEMICOLON increment RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA .)
    $end            reduce using rule 3 (statement -> FOR LPAREN declaration SEMICOLON condition SEMICOLON increment RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA .)
    LLAVE_CERRADA   reduce using rule 3 (statement -> FOR LPAREN declaration SEMICOLON condition SEMICOLON increment RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA .)


state 53

    (15) statements -> statement statements .

    LLAVE_CERRADA   reduce using rule 15 (statements -> statement statements .)

