Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMA

Grammar

Rule 0     S' -> program
Rule 1     program -> statement
Rule 2     program -> statement program
Rule 3     statement -> FOR LPAREN declaration SEMICOLON condition SEMICOLON increment RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA
Rule 4     declaration -> IDENTIFIER IDENTIFIER EQUALS expression
Rule 5     declaration -> IDENTIFIER EQUALS expression
Rule 6     condition -> expression comparison_op expression
Rule 7     comparison_op -> LT
Rule 8     comparison_op -> LE
Rule 9     comparison_op -> GT
Rule 10    comparison_op -> GE
Rule 11    comparison_op -> EQ
Rule 12    comparison_op -> NE
Rule 13    increment -> IDENTIFIER PLUS PLUS
Rule 14    increment -> IDENTIFIER MINUS MINUS
Rule 15    increment -> IDENTIFIER
Rule 16    statements -> statement
Rule 17    statements -> statement statements
Rule 18    statement -> IDENTIFIER DOT IDENTIFIER DOT PRINTLN LPAREN expression RPAREN SEMICOLON
Rule 19    expression -> expression PLUS term
Rule 20    expression -> expression MINUS term
Rule 21    expression -> expression TIMES term
Rule 22    expression -> expression DIVIDE term
Rule 23    expression -> term
Rule 24    term -> NUMBER
Rule 25    term -> IDENTIFIER

Terminals, with rules where they appear

COMMA                : 
DIVIDE               : 22
DOT                  : 18 18
EQ                   : 11
EQUALS               : 4 5
FOR                  : 3
GE                   : 10
GT                   : 9
IDENTIFIER           : 4 4 5 13 14 15 18 18 25
LE                   : 8
LLAVE_ABIERTA        : 3
LLAVE_CERRADA        : 3
LPAREN               : 3 18
LT                   : 7
MINUS                : 14 14 20
NE                   : 12
NUMBER               : 24
PLUS                 : 13 13 19
PRINTLN              : 18
RPAREN               : 3 18
SEMICOLON            : 3 3 18
TIMES                : 21
error                : 

Nonterminals, with rules where they appear

comparison_op        : 6
condition            : 3
declaration          : 3
expression           : 4 5 6 6 18 19 20 21 22
increment            : 3
program              : 2 0
statement            : 1 2 16 17
statements           : 3 17
term                 : 19 20 21 22 23

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement
    (2) program -> . statement program
    (3) statement -> . FOR LPAREN declaration SEMICOLON condition SEMICOLON increment RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA
    (18) statement -> . IDENTIFIER DOT IDENTIFIER DOT PRINTLN LPAREN expression RPAREN SEMICOLON

    FOR             shift and go to state 3
    IDENTIFIER      shift and go to state 4

    program                        shift and go to state 1
    statement                      shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> statement .
    (2) program -> statement . program
    (1) program -> . statement
    (2) program -> . statement program
    (3) statement -> . FOR LPAREN declaration SEMICOLON condition SEMICOLON increment RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA
    (18) statement -> . IDENTIFIER DOT IDENTIFIER DOT PRINTLN LPAREN expression RPAREN SEMICOLON

    $end            reduce using rule 1 (program -> statement .)
    FOR             shift and go to state 3
    IDENTIFIER      shift and go to state 4

    statement                      shift and go to state 2
    program                        shift and go to state 5

state 3

    (3) statement -> FOR . LPAREN declaration SEMICOLON condition SEMICOLON increment RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA

    LPAREN          shift and go to state 6


state 4

    (18) statement -> IDENTIFIER . DOT IDENTIFIER DOT PRINTLN LPAREN expression RPAREN SEMICOLON

    DOT             shift and go to state 7


state 5

    (2) program -> statement program .

    $end            reduce using rule 2 (program -> statement program .)


state 6

    (3) statement -> FOR LPAREN . declaration SEMICOLON condition SEMICOLON increment RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA
    (4) declaration -> . IDENTIFIER IDENTIFIER EQUALS expression
    (5) declaration -> . IDENTIFIER EQUALS expression

    IDENTIFIER      shift and go to state 9

    declaration                    shift and go to state 8

state 7

    (18) statement -> IDENTIFIER DOT . IDENTIFIER DOT PRINTLN LPAREN expression RPAREN SEMICOLON

    IDENTIFIER      shift and go to state 10


state 8

    (3) statement -> FOR LPAREN declaration . SEMICOLON condition SEMICOLON increment RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA

    SEMICOLON       shift and go to state 11


state 9

    (4) declaration -> IDENTIFIER . IDENTIFIER EQUALS expression
    (5) declaration -> IDENTIFIER . EQUALS expression

    IDENTIFIER      shift and go to state 12
    EQUALS          shift and go to state 13


state 10

    (18) statement -> IDENTIFIER DOT IDENTIFIER . DOT PRINTLN LPAREN expression RPAREN SEMICOLON

    DOT             shift and go to state 14


state 11

    (3) statement -> FOR LPAREN declaration SEMICOLON . condition SEMICOLON increment RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA
    (6) condition -> . expression comparison_op expression
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . expression TIMES term
    (22) expression -> . expression DIVIDE term
    (23) expression -> . term
    (24) term -> . NUMBER
    (25) term -> . IDENTIFIER

    NUMBER          shift and go to state 18
    IDENTIFIER      shift and go to state 19

    condition                      shift and go to state 15
    expression                     shift and go to state 16
    term                           shift and go to state 17

state 12

    (4) declaration -> IDENTIFIER IDENTIFIER . EQUALS expression

    EQUALS          shift and go to state 20


state 13

    (5) declaration -> IDENTIFIER EQUALS . expression
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . expression TIMES term
    (22) expression -> . expression DIVIDE term
    (23) expression -> . term
    (24) term -> . NUMBER
    (25) term -> . IDENTIFIER

    NUMBER          shift and go to state 18
    IDENTIFIER      shift and go to state 19

    expression                     shift and go to state 21
    term                           shift and go to state 17

state 14

    (18) statement -> IDENTIFIER DOT IDENTIFIER DOT . PRINTLN LPAREN expression RPAREN SEMICOLON

    PRINTLN         shift and go to state 22


state 15

    (3) statement -> FOR LPAREN declaration SEMICOLON condition . SEMICOLON increment RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA

    SEMICOLON       shift and go to state 23


state 16

    (6) condition -> expression . comparison_op expression
    (19) expression -> expression . PLUS term
    (20) expression -> expression . MINUS term
    (21) expression -> expression . TIMES term
    (22) expression -> expression . DIVIDE term
    (7) comparison_op -> . LT
    (8) comparison_op -> . LE
    (9) comparison_op -> . GT
    (10) comparison_op -> . GE
    (11) comparison_op -> . EQ
    (12) comparison_op -> . NE

    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    LT              shift and go to state 29
    LE              shift and go to state 30
    GT              shift and go to state 31
    GE              shift and go to state 32
    EQ              shift and go to state 33
    NE              shift and go to state 34

    comparison_op                  shift and go to state 24

state 17

    (23) expression -> term .

    PLUS            reduce using rule 23 (expression -> term .)
    MINUS           reduce using rule 23 (expression -> term .)
    TIMES           reduce using rule 23 (expression -> term .)
    DIVIDE          reduce using rule 23 (expression -> term .)
    LT              reduce using rule 23 (expression -> term .)
    LE              reduce using rule 23 (expression -> term .)
    GT              reduce using rule 23 (expression -> term .)
    GE              reduce using rule 23 (expression -> term .)
    EQ              reduce using rule 23 (expression -> term .)
    NE              reduce using rule 23 (expression -> term .)
    SEMICOLON       reduce using rule 23 (expression -> term .)
    RPAREN          reduce using rule 23 (expression -> term .)


state 18

    (24) term -> NUMBER .

    PLUS            reduce using rule 24 (term -> NUMBER .)
    MINUS           reduce using rule 24 (term -> NUMBER .)
    TIMES           reduce using rule 24 (term -> NUMBER .)
    DIVIDE          reduce using rule 24 (term -> NUMBER .)
    LT              reduce using rule 24 (term -> NUMBER .)
    LE              reduce using rule 24 (term -> NUMBER .)
    GT              reduce using rule 24 (term -> NUMBER .)
    GE              reduce using rule 24 (term -> NUMBER .)
    EQ              reduce using rule 24 (term -> NUMBER .)
    NE              reduce using rule 24 (term -> NUMBER .)
    SEMICOLON       reduce using rule 24 (term -> NUMBER .)
    RPAREN          reduce using rule 24 (term -> NUMBER .)


state 19

    (25) term -> IDENTIFIER .

    PLUS            reduce using rule 25 (term -> IDENTIFIER .)
    MINUS           reduce using rule 25 (term -> IDENTIFIER .)
    TIMES           reduce using rule 25 (term -> IDENTIFIER .)
    DIVIDE          reduce using rule 25 (term -> IDENTIFIER .)
    LT              reduce using rule 25 (term -> IDENTIFIER .)
    LE              reduce using rule 25 (term -> IDENTIFIER .)
    GT              reduce using rule 25 (term -> IDENTIFIER .)
    GE              reduce using rule 25 (term -> IDENTIFIER .)
    EQ              reduce using rule 25 (term -> IDENTIFIER .)
    NE              reduce using rule 25 (term -> IDENTIFIER .)
    SEMICOLON       reduce using rule 25 (term -> IDENTIFIER .)
    RPAREN          reduce using rule 25 (term -> IDENTIFIER .)


state 20

    (4) declaration -> IDENTIFIER IDENTIFIER EQUALS . expression
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . expression TIMES term
    (22) expression -> . expression DIVIDE term
    (23) expression -> . term
    (24) term -> . NUMBER
    (25) term -> . IDENTIFIER

    NUMBER          shift and go to state 18
    IDENTIFIER      shift and go to state 19

    expression                     shift and go to state 35
    term                           shift and go to state 17

state 21

    (5) declaration -> IDENTIFIER EQUALS expression .
    (19) expression -> expression . PLUS term
    (20) expression -> expression . MINUS term
    (21) expression -> expression . TIMES term
    (22) expression -> expression . DIVIDE term

    SEMICOLON       reduce using rule 5 (declaration -> IDENTIFIER EQUALS expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28


state 22

    (18) statement -> IDENTIFIER DOT IDENTIFIER DOT PRINTLN . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 36


state 23

    (3) statement -> FOR LPAREN declaration SEMICOLON condition SEMICOLON . increment RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA
    (13) increment -> . IDENTIFIER PLUS PLUS
    (14) increment -> . IDENTIFIER MINUS MINUS
    (15) increment -> . IDENTIFIER

    IDENTIFIER      shift and go to state 38

    increment                      shift and go to state 37

state 24

    (6) condition -> expression comparison_op . expression
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . expression TIMES term
    (22) expression -> . expression DIVIDE term
    (23) expression -> . term
    (24) term -> . NUMBER
    (25) term -> . IDENTIFIER

    NUMBER          shift and go to state 18
    IDENTIFIER      shift and go to state 19

    expression                     shift and go to state 39
    term                           shift and go to state 17

state 25

    (19) expression -> expression PLUS . term
    (24) term -> . NUMBER
    (25) term -> . IDENTIFIER

    NUMBER          shift and go to state 18
    IDENTIFIER      shift and go to state 19

    term                           shift and go to state 40

state 26

    (20) expression -> expression MINUS . term
    (24) term -> . NUMBER
    (25) term -> . IDENTIFIER

    NUMBER          shift and go to state 18
    IDENTIFIER      shift and go to state 19

    term                           shift and go to state 41

state 27

    (21) expression -> expression TIMES . term
    (24) term -> . NUMBER
    (25) term -> . IDENTIFIER

    NUMBER          shift and go to state 18
    IDENTIFIER      shift and go to state 19

    term                           shift and go to state 42

state 28

    (22) expression -> expression DIVIDE . term
    (24) term -> . NUMBER
    (25) term -> . IDENTIFIER

    NUMBER          shift and go to state 18
    IDENTIFIER      shift and go to state 19

    term                           shift and go to state 43

state 29

    (7) comparison_op -> LT .

    NUMBER          reduce using rule 7 (comparison_op -> LT .)
    IDENTIFIER      reduce using rule 7 (comparison_op -> LT .)


state 30

    (8) comparison_op -> LE .

    NUMBER          reduce using rule 8 (comparison_op -> LE .)
    IDENTIFIER      reduce using rule 8 (comparison_op -> LE .)


state 31

    (9) comparison_op -> GT .

    NUMBER          reduce using rule 9 (comparison_op -> GT .)
    IDENTIFIER      reduce using rule 9 (comparison_op -> GT .)


state 32

    (10) comparison_op -> GE .

    NUMBER          reduce using rule 10 (comparison_op -> GE .)
    IDENTIFIER      reduce using rule 10 (comparison_op -> GE .)


state 33

    (11) comparison_op -> EQ .

    NUMBER          reduce using rule 11 (comparison_op -> EQ .)
    IDENTIFIER      reduce using rule 11 (comparison_op -> EQ .)


state 34

    (12) comparison_op -> NE .

    NUMBER          reduce using rule 12 (comparison_op -> NE .)
    IDENTIFIER      reduce using rule 12 (comparison_op -> NE .)


state 35

    (4) declaration -> IDENTIFIER IDENTIFIER EQUALS expression .
    (19) expression -> expression . PLUS term
    (20) expression -> expression . MINUS term
    (21) expression -> expression . TIMES term
    (22) expression -> expression . DIVIDE term

    SEMICOLON       reduce using rule 4 (declaration -> IDENTIFIER IDENTIFIER EQUALS expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28


state 36

    (18) statement -> IDENTIFIER DOT IDENTIFIER DOT PRINTLN LPAREN . expression RPAREN SEMICOLON
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . expression TIMES term
    (22) expression -> . expression DIVIDE term
    (23) expression -> . term
    (24) term -> . NUMBER
    (25) term -> . IDENTIFIER

    NUMBER          shift and go to state 18
    IDENTIFIER      shift and go to state 19

    expression                     shift and go to state 44
    term                           shift and go to state 17

state 37

    (3) statement -> FOR LPAREN declaration SEMICOLON condition SEMICOLON increment . RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA

    RPAREN          shift and go to state 45


state 38

    (13) increment -> IDENTIFIER . PLUS PLUS
    (14) increment -> IDENTIFIER . MINUS MINUS
    (15) increment -> IDENTIFIER .

    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    RPAREN          reduce using rule 15 (increment -> IDENTIFIER .)


state 39

    (6) condition -> expression comparison_op expression .
    (19) expression -> expression . PLUS term
    (20) expression -> expression . MINUS term
    (21) expression -> expression . TIMES term
    (22) expression -> expression . DIVIDE term

    SEMICOLON       reduce using rule 6 (condition -> expression comparison_op expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28


state 40

    (19) expression -> expression PLUS term .

    PLUS            reduce using rule 19 (expression -> expression PLUS term .)
    MINUS           reduce using rule 19 (expression -> expression PLUS term .)
    TIMES           reduce using rule 19 (expression -> expression PLUS term .)
    DIVIDE          reduce using rule 19 (expression -> expression PLUS term .)
    LT              reduce using rule 19 (expression -> expression PLUS term .)
    LE              reduce using rule 19 (expression -> expression PLUS term .)
    GT              reduce using rule 19 (expression -> expression PLUS term .)
    GE              reduce using rule 19 (expression -> expression PLUS term .)
    EQ              reduce using rule 19 (expression -> expression PLUS term .)
    NE              reduce using rule 19 (expression -> expression PLUS term .)
    SEMICOLON       reduce using rule 19 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 19 (expression -> expression PLUS term .)


state 41

    (20) expression -> expression MINUS term .

    PLUS            reduce using rule 20 (expression -> expression MINUS term .)
    MINUS           reduce using rule 20 (expression -> expression MINUS term .)
    TIMES           reduce using rule 20 (expression -> expression MINUS term .)
    DIVIDE          reduce using rule 20 (expression -> expression MINUS term .)
    LT              reduce using rule 20 (expression -> expression MINUS term .)
    LE              reduce using rule 20 (expression -> expression MINUS term .)
    GT              reduce using rule 20 (expression -> expression MINUS term .)
    GE              reduce using rule 20 (expression -> expression MINUS term .)
    EQ              reduce using rule 20 (expression -> expression MINUS term .)
    NE              reduce using rule 20 (expression -> expression MINUS term .)
    SEMICOLON       reduce using rule 20 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 20 (expression -> expression MINUS term .)


state 42

    (21) expression -> expression TIMES term .

    PLUS            reduce using rule 21 (expression -> expression TIMES term .)
    MINUS           reduce using rule 21 (expression -> expression TIMES term .)
    TIMES           reduce using rule 21 (expression -> expression TIMES term .)
    DIVIDE          reduce using rule 21 (expression -> expression TIMES term .)
    LT              reduce using rule 21 (expression -> expression TIMES term .)
    LE              reduce using rule 21 (expression -> expression TIMES term .)
    GT              reduce using rule 21 (expression -> expression TIMES term .)
    GE              reduce using rule 21 (expression -> expression TIMES term .)
    EQ              reduce using rule 21 (expression -> expression TIMES term .)
    NE              reduce using rule 21 (expression -> expression TIMES term .)
    SEMICOLON       reduce using rule 21 (expression -> expression TIMES term .)
    RPAREN          reduce using rule 21 (expression -> expression TIMES term .)


state 43

    (22) expression -> expression DIVIDE term .

    PLUS            reduce using rule 22 (expression -> expression DIVIDE term .)
    MINUS           reduce using rule 22 (expression -> expression DIVIDE term .)
    TIMES           reduce using rule 22 (expression -> expression DIVIDE term .)
    DIVIDE          reduce using rule 22 (expression -> expression DIVIDE term .)
    LT              reduce using rule 22 (expression -> expression DIVIDE term .)
    LE              reduce using rule 22 (expression -> expression DIVIDE term .)
    GT              reduce using rule 22 (expression -> expression DIVIDE term .)
    GE              reduce using rule 22 (expression -> expression DIVIDE term .)
    EQ              reduce using rule 22 (expression -> expression DIVIDE term .)
    NE              reduce using rule 22 (expression -> expression DIVIDE term .)
    SEMICOLON       reduce using rule 22 (expression -> expression DIVIDE term .)
    RPAREN          reduce using rule 22 (expression -> expression DIVIDE term .)


state 44

    (18) statement -> IDENTIFIER DOT IDENTIFIER DOT PRINTLN LPAREN expression . RPAREN SEMICOLON
    (19) expression -> expression . PLUS term
    (20) expression -> expression . MINUS term
    (21) expression -> expression . TIMES term
    (22) expression -> expression . DIVIDE term

    RPAREN          shift and go to state 48
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28


state 45

    (3) statement -> FOR LPAREN declaration SEMICOLON condition SEMICOLON increment RPAREN . LLAVE_ABIERTA statements LLAVE_CERRADA

    LLAVE_ABIERTA   shift and go to state 49


state 46

    (13) increment -> IDENTIFIER PLUS . PLUS

    PLUS            shift and go to state 50


state 47

    (14) increment -> IDENTIFIER MINUS . MINUS

    MINUS           shift and go to state 51


state 48

    (18) statement -> IDENTIFIER DOT IDENTIFIER DOT PRINTLN LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 52


state 49

    (3) statement -> FOR LPAREN declaration SEMICOLON condition SEMICOLON increment RPAREN LLAVE_ABIERTA . statements LLAVE_CERRADA
    (16) statements -> . statement
    (17) statements -> . statement statements
    (3) statement -> . FOR LPAREN declaration SEMICOLON condition SEMICOLON increment RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA
    (18) statement -> . IDENTIFIER DOT IDENTIFIER DOT PRINTLN LPAREN expression RPAREN SEMICOLON

    FOR             shift and go to state 3
    IDENTIFIER      shift and go to state 4

    statements                     shift and go to state 53
    statement                      shift and go to state 54

state 50

    (13) increment -> IDENTIFIER PLUS PLUS .

    RPAREN          reduce using rule 13 (increment -> IDENTIFIER PLUS PLUS .)


state 51

    (14) increment -> IDENTIFIER MINUS MINUS .

    RPAREN          reduce using rule 14 (increment -> IDENTIFIER MINUS MINUS .)


state 52

    (18) statement -> IDENTIFIER DOT IDENTIFIER DOT PRINTLN LPAREN expression RPAREN SEMICOLON .

    FOR             reduce using rule 18 (statement -> IDENTIFIER DOT IDENTIFIER DOT PRINTLN LPAREN expression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 18 (statement -> IDENTIFIER DOT IDENTIFIER DOT PRINTLN LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 18 (statement -> IDENTIFIER DOT IDENTIFIER DOT PRINTLN LPAREN expression RPAREN SEMICOLON .)
    LLAVE_CERRADA   reduce using rule 18 (statement -> IDENTIFIER DOT IDENTIFIER DOT PRINTLN LPAREN expression RPAREN SEMICOLON .)


state 53

    (3) statement -> FOR LPAREN declaration SEMICOLON condition SEMICOLON increment RPAREN LLAVE_ABIERTA statements . LLAVE_CERRADA

    LLAVE_CERRADA   shift and go to state 55


state 54

    (16) statements -> statement .
    (17) statements -> statement . statements
    (16) statements -> . statement
    (17) statements -> . statement statements
    (3) statement -> . FOR LPAREN declaration SEMICOLON condition SEMICOLON increment RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA
    (18) statement -> . IDENTIFIER DOT IDENTIFIER DOT PRINTLN LPAREN expression RPAREN SEMICOLON

    LLAVE_CERRADA   reduce using rule 16 (statements -> statement .)
    FOR             shift and go to state 3
    IDENTIFIER      shift and go to state 4

    statement                      shift and go to state 54
    statements                     shift and go to state 56

state 55

    (3) statement -> FOR LPAREN declaration SEMICOLON condition SEMICOLON increment RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA .

    FOR             reduce using rule 3 (statement -> FOR LPAREN declaration SEMICOLON condition SEMICOLON increment RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA .)
    IDENTIFIER      reduce using rule 3 (statement -> FOR LPAREN declaration SEMICOLON condition SEMICOLON increment RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA .)
    $end            reduce using rule 3 (statement -> FOR LPAREN declaration SEMICOLON condition SEMICOLON increment RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA .)
    LLAVE_CERRADA   reduce using rule 3 (statement -> FOR LPAREN declaration SEMICOLON condition SEMICOLON increment RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA .)


state 56

    (17) statements -> statement statements .

    LLAVE_CERRADA   reduce using rule 17 (statements -> statement statements .)

